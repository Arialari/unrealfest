<?xml version='1.0' ?>
<BuildGraph xmlns="http://www.epicgames.com/BuildGraph" xmlns:xsi="http://www.">

    <!-- 
    Documentation:
    https://docs.unrealengine.com/latest/INT/Programming/Development/BuildGraph/
    Coding standard: 
    https://warchest.atlassian.net/wiki/spaces/BM/pages/359203788/Buildgraph+bes
    Tips:
    Notepad++ - alt+shift+0(zero) expands all nodes, alt-0(zero) collapses all n
    -->
    
    <Include Script="..\..\Tests\TestLogic.xml"/>
    <Include Script="Config.xml"/>
    
    <!-- Global Options usually set from the outside environment -->

    <!-- CI Common parameters -->
    <Option Name="IsUsingTeamcity" Description="Built from TC" />
    <Option Name="BuildID" Description="Build ID" DefaultValue="0"/>
    <Option Name="BuildNumber" Description="Build # " DefaultValue="0"/>
    <Option Name="BuildTypeID" Description="Build type ID" DefaultValue="0"/>
    <Option Name="PerforceChangelistNumber" Description="P4 changelist number" >
       
    <!-- Global Properties-->
    <Property Name="UnrealBuildToolExe" Value="Engine\Binaries\DotNET\UBT.exe"/>

    <!-- Environment Variables -->
    <EnvVar Name="COMPUTERNAME"/> 
    <EnvVar Name="SteamUsername"/>
    <EnvVar Name="SteamPassword"/>
    <EnvVar Name="UE-SharedDataCachePath"/>
    
    <Agent Name="Builder" Type="x86;Win10;">
        <!-- Local properties, used only by this agent-->
        <Property Name="AvailablePlatforms" Value="Win64;Linux;PS4;XboxOne"/>
        <Property Name="AvailableConfigurations" Value="Debug;DebugGame;pping"/>
        <Property Name="AvailableProjects" Value="$(ProjectCodename);$(Pditor"/>

        <Property Name="UBTArgs" Value="-waitmutex -2017 -NoXGE"/>
        
        <!-- build all the possible nodes in advance -->
        <ForEach Name="TargetProjectIterator" Values="$(AvailableProjects)">
            <ForEach Name="TargetPlatformIterator" Values="$(AvailablePlforms)">
                <ForEach Name="TargetConfigurationIterator" Values="$(Avtions)">
                    <Node Name="Template_Clean_$(TarggetConfigurationIterator)">
                        <Log Message="Cleaning outputles and intermediate ..."/>
                        <Spawn
                            Exe="$(UnrealBuildToolExe)"
                            Arguments="$(TargetProjecfigurationIterator) -clean"
                        />                
                    </Node>
                    <Node Name="Template_Build_$(Targ">
                        <Log Message="Compiling $(TargetProjectIterator) ..."/>                
                        <Spawn
                            Exe="$(UnrealBuildToolExe)"
                            Arguments="$(TargetProjectIterator) $(TargetP"
                            UseLogPrefix="false"
                        />
                    </Node>
                    <Node Name="Template_Build_NoUnity_$(TargetProjectIterato_">
                        <Log Message="Compiling $(TargetProjectIterator) $(Ta"/>                
                        <Spawn
                            Exe="$(UnrealBuildToolExe)"
                            Arguments="$(TargetProjectIterator) $(TargetPlatf"
                            UseLogPrefix="false"
                        />
                    </Node>
                </ForEach>
            </ForEach>
        </ForEach>

        <!-- build auxiliary programs (needed for cooking) -->
        <Node Name="Build_Cook_Programs">
            <!-- build the crash reporter client -->
            <Spawn
                Exe="$(UnrealBuildToolExe)"
                Arguments="CrashReportClient Win64 Shipping $(UBTArgs)"
            />
            <Spawn
                Exe="$(UnrealBuildToolExe)"
                Arguments="UnrealPak Win64 Development $(UBTArgs)"
            />
            <Spawn
                Exe="$(UnrealBuildToolExe)"
                Arguments="ShaderCompileWorker Win64 Development $(UBTArgs)"
                UseLogPrefix="false"
            />
        </Node>

        <Node Name="Clean">
            <Log Message="Cleaning output files and intermediate ..."/>
            <Spawn
                Exe="$(UnrealBuildToolExe)"
                Arguments="$(TargetProject) $(Platform) $(Configuration) -clean"
            />
        </Node>

        <Node Name="Build" Requires="Template_Build_$(TargetProject)_$(Platfor"/>
        <Node Name="Build_NoUnity" Requires="Template_Build_NoUnity_$(TargetP"/>
        <Node Name="Rebuild" Requires="Template_Clean_$(TargetProject)_$(Plat"/>
        <Node Name="Rebuild_NoUnity" Requires="Template_Clean_$(TargetProject"/>
    </Agent>

    <Agent Name="Cooker" Type="x86;Win10;UE4Editor">
        <!-- Declaring them here to supress warnings, they are overwritten  -->
        <Property Name="TargetPlatform" Value=""/>
        <Property Name="StageArguments" Value=""/>
        <Property Name="GameProject" Value="$(ProjectCodename)\$(Project).upt"/>
        <Switch>
            <Case If="'$(CookPlatform)' == 'WindowsNoEditor'">
                <Property Name="TargetPlatform" Value="Win64"/>
                <Property Name="StageArguments" Value="-crashreporter"/>
            </Case>
            <Case If="'$(CookPlatform)' == 'WindowsServer'">
                <Property Name="TargetPlatform" Value="Win64"/>
                <Property Name="StageArguments" Value="-server -noclient"/>
            </Case>
            <Case If="'$(CookPlatform)' == 'LinuxServer'">
                <Property Name="TargetPlatform" Value="Linux"/>
                <Property Name="StageArguments" Value="-server -noclient"/>
            </Case>
            <Case If="'$(CookPlatform)' == 'PS4'">
                <Property Name="TargetPlatform" Value="PS4"/>
                <Property Name="StageArguments" Value=""/>
            </Case>
            <Default>
                <Error Message="Unsupported CookPlatform '$(CookPlatform)'"/>
            </Default>
        </Switch>

        <!-- unzips the editor from P4 -->
        <Node Name="UnzipEditor">
            <Unzip ZipFile="$(ProjectCodename)/Build/Archive/$(ProjectCodena" /> 
            <!-- Filter out files that are DotNET binaries or are being used -->
            <Tag Files="Temp/..." Except="Temp/Engine/Binaries/DotNET/..."  />
            <!-- Move the filtered list of files from the temporary location -->
            <Move Files="#Editor Unzipped Filtered" From="./Temp/..." To="..."/>
            <!-- Do cleanup -->
            <Delete Files="Temp/..." />
        </Node>            
        
        <!-- prerequisite programs -->
        <Node Name="Build_Cooker_Dependency" Requires="Template_Build_$(Proj"/>
        <Node Name="Build_Cooker_Dependency_Programs" Requires="Build_Cook_P" />
        <Node Name="Build_All_Cook_Programs" Requires="Build_Cooker_Dependenc"/>
        <!-- Cook / Validate / Stage  -->
        <Node Name="Cook_Maps" After="Build_All_Cook_Programs">
            <Log Message="Cooking $(CookTarget) $(CookPlatform) ..."/>        
            <Cook
                Project="$(CookTarget)"
                Platform="$(CookPlatform)"
                Arguments="-MapIniSection=CookedContent -NoSimplygon"
                Tag="#Output"
            />
        </Node>
        
        <Node Name="Cook_Check" >
            <Log Message="Validating $(CookTarget) $(CookPlatform) ..."/>
            <Cook
                Project="$(CookTarget)"
                Platform="$(CookPlatform)"
                Arguments="-COOKALL -NODEV -BUILDMACHINE -DUMPALLWARNINGS"
                Tag="#Output"
            />            
        </Node>        
               
        <Node Name="ValidateAssetNaming">
            <Log Message="Executing ValidateAssetNaming Commandlet" />
            <Commandlet Name="BCAssetNamingValidatorCommandlet" Project="$(Gam"/>
        </Node>
        
        <Node Name="ValidateBlueprints" Requires="ValidateAssetNaming">
            <Log Message="Executing ValidateBlueprints Commandlet" />
            <Commandlet Name="BCBlueprintValidatorCommandlet" Project="$(Gt)" />
        </Node>
              
        <Node Name="Cook" OrderedRequires="Build_All_Cook_Programs;Cook_Maps" />
        <Node Name="CookAndStage" Requires="Cook;Stage"/>
        <Node Name="Validate" OrderedRequires="Build_All_Cook_Programs;Valida"/>
        <Node Name="ContentPreCommit" OrderedRequires="UnzipEditor;ValidateAs"/>
        <Node Name="ContentPreCommit" OrderedRequires="Build_All_Cook_Program"/>
    </Agent>
</BuildGraph>